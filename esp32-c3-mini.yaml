esphome:
  name: esp32-c3-mini
  friendly_name: ESP32-C3-MINI
  
# external_components:
#   - source:
#       type: git
#       url: https://github.com/ssieb/esphome
#       ref: ds
#     components: [ dallas ]
#     refresh: 1min
    
esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "eILJpZPa8ph39KMccnynpFQk4Khj26KE09VojuFb0a4="

ota:
  - platform: esphome
    password: "57ea0cbe34cb586010bfe93895047ffb"

wifi:
  id: espwifi
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-C3-Mini Fallback Hotspot"
    password: "kIkSsDhGGcKj"
  on_connect:
    component.update: st7735_01

captive_portal:


one_wire:
  - platform: gpio
    pin: 3 
    id: onewire_18b20

# sensor:
#   - platform: dallas_temp
#     address: 0x1234567812345628
#     name: temperature
#     update_interval: 2s
#     id: ds18b20_01
#     one_wire_id: onewire_18b20

spi:
  clk_pin: 6
  mosi_pin: 7
  id: lcd_spi

font:
  - file: 'fonts/GoogleSans-Medium.ttf'
    id: font10
    size: 10
  - file: 'fonts/GoogleSans-Medium.ttf'
    id: font11
    size: 11
  - file: 'fonts/GoogleSans-Medium.ttf'
    id: sm2
    size: 22
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_glyphs_12
    size: 12
    glyphs: &mdi-battery-glyphs
      - "\U000F10CD" # mdi-battery-warning
      - "\U000F12A3" # mdi-battery-high
      - "\U000F12A2" # mdi-battery-med
      - "\U000F12A1" # mdi-battery-low
      - "\U000F05AA" # wifi off
      - "\U000F05A9" # wifi on
      - "\U000F0E8E" # sync
      - "\U000F0E8F" # sync 2
      - "\U000F0590" # cloudy
      - "\U000F00B0" # ble
  - file: "fonts/GoogleSans-Medium.ttf"
    id: font_date
    size: 15
  - file: "fonts/GoogleSans-Bold.ttf"
    id: font_time
    size: 35
  - file: "fonts/GoogleSans-Bold.ttf"
    id: font_value
    size: 12
  - file: 'fonts/DS-DIGIB.TTF'
    id: digi_font
    size: 16

color:
  - id: color_blk
    red: 100%
    green: 100%
    blue: 100%
    white: 100%
  - id: color_red
    red: 100%
    green: 0%
    blue: 0%
    white: 100%

# interval:
#   - interval: 1min
#     then:
#       - component.update: st7735_01

display:
    - platform: st7735
      id: st7735_01
      device_height: 160
      device_width: 80
      model: INITR_MINI160X80
      col_start: 0
      row_start: 0
      cs_pin: 10
      dc_pin: 8
      reset_pin: 2
      rotation: 90
      invert_colors: False
      eight_bit_color: True
      spi_id: lcd_spi
      lambda: |-
        auto xres = 160;
        auto yres = 80;
        auto black = Color(0, 0, 0);
        auto red = Color(255, 0, 0);
        auto green = Color(0, 255, 0);
        auto blue = Color(0, 0, 255);
        auto white = Color(255, 255, 255);
        auto turquoise1 = Color(0, 245, 255);
        auto violet = Color(238, 130, 238);
        auto cyan = Color(0,255,255); //
        auto purple = Color(160, 32, 240);
        auto wifi_ip_str = id(wifi_ip).state;
        auto wip_len = wifi_ip_str.size();
        //auto wip_idx = wifi_ip_str.find(".", 2);
        //auto wip_out = wifi_ip_str.substr(wip_idx, wip_len);
        
        if (id(espwifi).is_connected()) {
          
          ESP_LOGW("kangx", "str is: %s, len is: %d, substr is: %s", wifi_ip_str.c_str(), wip_len, wifi_ip_str.substr(8, wip_len).c_str() );
          
          it.printf  (0,       0, id(font11),            green, TextAlign::TOP_LEFT,   "%s",  wifi_ip_str.substr(8, 11).c_str()   );

          it.printf  (xres/2,  0, id(font10),            color_red, TextAlign::TOP_CENTER, "%s",  id(wifi_ssid).state.c_str() );

          //it.printf  (xres/2+10, 0, id(font10),            green, TextAlign::TOP_CENTER,  "%0.1fÂ°C",   id(ds18b20_01).state );

          it.printf  (xres-20,   0, id(font_glyphs_12)   , red, TextAlign::TOP_LEFT,   "%s",  "\U000F05A9" );

          it.strftime(xres/2, 16,      id(font_date),     purple, TextAlign::TOP_CENTER, "%A %b %d ", id(sntp_time).now());

          it.strftime(xres/2, yres/2 - 4 , id(font_time), white, TextAlign::TOP_CENTER, "%I:%M %p",  id(sntp_time).now()); //"%H:%M",  

        } else {

          it.printf  (xres-20,   0, id(font_glyphs_12)   , red, TextAlign::TOP_LEFT,   "%s",   "\U000F05AA" );

          it.printf  (xres/2, yres/2 -17, id(font_value),     green, TextAlign::TOP_CENTER,  "WiFi is Connecting!" );

        }

text_sensor:
  - platform: wifi_info
    ip_address:
      id: wifi_ip
      name: ESP IP Address
      address_0:
        name: ESP IP Address 0
    ssid:
      id: wifi_ssid
      name: ESP Connected SSID
    bssid:
      name: ESP Connected BSSID
    mac_address:
      name: ESP Mac Wifi Address
    scan_results:
      name: ESP Latest Scan Results
    dns_address:
      name: ESP DNS Address

time:
  - platform: sntp
    id: sntp_time
    timezone: Asia/Shanghai
    servers:
     - 120.25.115.20
     - 114.67.103.73
     - 202.112.31.197